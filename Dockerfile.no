FROM golang:1.8.3-alpine3.6

ENV GOPATH /go
ENV PATH $GOPATH/bin:$PATH

# Run a gofmt and exclude all vendored code.
RUN test -z "$(gofmt -l $(find . -type f -name '*.go' -not -path "./vendor/*" -not -path "./function/vendor/*"))" || { echo "Run \"gofmt -s -w\" on your Golang code"; exit 1; }

FROM alpine:3.6
RUN apk --no-cache add ca-certificates

# Add non root user
RUN addgroup -S app && adduser -S -g app app
RUN mkdir -p /go/src/github.com/shanepeckham/captureorderack/
RUN chown app /go/src/github.com/shanepeckham/captureorderack/

WORKDIR /go/src/github.com/shanepeckham/captureorderack/

# Copy the application files (needed for production)
ADD . /go/src/hackcaptureorder/hackcaptureorder

USER app

# EH
ENV EVENTURL=
ENV EVENTPOLICYNAME=
ENV EVENTPOLICYKEY=
# ACK Logging
ENV TEAMNAME=
# Mongo/Cosmos
ENV MONGOHOST=
# RabbitMQ
ENV RABBITMQHOST=

# Expose the application on port 8080
EXPOSE 8080

# Set the entry point of the container to the bee command that runs the
# application and watches for changes

CMD ["./captureorderack"]
